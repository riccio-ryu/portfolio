[{"/Users/youyeonchang/Desktop/portfolio/petti/client/src/index.tsx":"1","/Users/youyeonchang/Desktop/portfolio/petti/client/src/theme.ts":"2","/Users/youyeonchang/Desktop/portfolio/petti/client/src/App.tsx":"3","/Users/youyeonchang/Desktop/portfolio/petti/client/src/atoms.ts":"4","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/utils/Size.tsx":"5","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/LoginPage/LoginPage.tsx":"6","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/NavBar/NavBar.tsx":"7","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Board/Board.tsx":"8","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/RegisterPage/RegisterPage.tsx":"9","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Goods/Goods.tsx":"10","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Gallery/Gallery.tsx":"11","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Health/Health.tsx":"12","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/Home.tsx":"13","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Together/Together.tsx":"14","/Users/youyeonchang/Desktop/portfolio/petti/client/src/api.ts":"15","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/HomePopularGallery.tsx":"16","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/HomeRecentGallery.tsx":"17","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/HomeRecommendGallery.tsx":"18","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/NavBar/RightSide/RightSide.tsx":"19","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/NavBar/LeftSide/LeftSide.tsx":"20","/Users/youyeonchang/Desktop/portfolio/petti/client/src/util.ts":"21","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/HomeCommon.tsx":"22","/Users/youyeonchang/Desktop/portfolio/petti/client/src/hoc/auth.js":"23"},{"size":2502,"mtime":1650139298025,"results":"24","hashOfConfig":"25"},{"size":369,"mtime":1644409171360,"results":"26","hashOfConfig":"25"},{"size":2666,"mtime":1650488076664,"results":"27","hashOfConfig":"25"},{"size":435,"mtime":1650403637098,"results":"28","hashOfConfig":"25"},{"size":540,"mtime":1645430723000,"results":"29","hashOfConfig":"25"},{"size":4832,"mtime":1650489393446,"results":"30","hashOfConfig":"25"},{"size":6507,"mtime":1650488137405,"results":"31","hashOfConfig":"25"},{"size":153,"mtime":1650487576323,"results":"32","hashOfConfig":"25"},{"size":5360,"mtime":1650488089712,"results":"33","hashOfConfig":"25"},{"size":153,"mtime":1650487556613,"results":"34","hashOfConfig":"25"},{"size":164,"mtime":1650487534519,"results":"35","hashOfConfig":"25"},{"size":155,"mtime":1650487546596,"results":"36","hashOfConfig":"25"},{"size":1752,"mtime":1650487523223,"results":"37","hashOfConfig":"25"},{"size":159,"mtime":1650487565883,"results":"38","hashOfConfig":"25"},{"size":1425,"mtime":1650488656420,"results":"39","hashOfConfig":"25"},{"size":3242,"mtime":1648514217178,"results":"40","hashOfConfig":"25"},{"size":3238,"mtime":1648457059115,"results":"41","hashOfConfig":"25"},{"size":3248,"mtime":1648514230925,"results":"42","hashOfConfig":"25"},{"size":5852,"mtime":1650487481188,"results":"43","hashOfConfig":"25"},{"size":2805,"mtime":1650403871651,"results":"44","hashOfConfig":"25"},{"size":138,"mtime":1647369120773,"results":"45","hashOfConfig":"25"},{"size":2661,"mtime":1648517870135,"results":"46","hashOfConfig":"25"},{"size":1214,"mtime":1650489003337,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"za5nvv",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"51"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"51"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},"/Users/youyeonchang/Desktop/portfolio/petti/client/src/index.tsx",[],[],["126","127"],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/theme.ts",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/App.tsx",["128"],[],"import React, { Suspense, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport NavBar from './Components/views/NavBar/NavBar';\nimport LoginPage from './Components/views/LoginPage/LoginPage';\nimport RegisterPage from './Components/views/RegisterPage/RegisterPage';\nimport Board from './Components/views/Board/Board';\nimport Gallery from './Components/views/Gallery/Gallery';\nimport Goods from './Components/views/Goods/Goods';\nimport Health from './Components/views/Health/Health';\nimport Together from './Components/views/Together/Together';\nimport Home from './Components/views/Home/Home';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { isTabletSize } from './atoms';\nimport { ITableSize } from './api';\nimport { device } from './Components/utils/Size';\nimport Auth from './hoc/auth';\n\nconst Wrapper = styled.div<ITableSize>`\n  background-color: ${(props) => props.theme.light.darker};\n  color: ${(props) => props.theme.dark.darker};\n  padding: 5.6rem 1.6rem 0 1.6rem;\n`\n\nfunction App() {\n  const isTabletMode = useRecoilValue(isTabletSize);\n  const setTabletSize = useSetRecoilState(isTabletSize);\n  const resizeHandler = () => {\n    if(window.outerWidth > +device.tablet.replace(/[^0-9]/g, \"\")){//ww가 큼\n      setTabletSize(true);\n    }else{\n      setTabletSize(false);\n    }\n  }\n  useEffect(() => {\n    const ww = window.outerWidth;\n    const tw = +device.tablet.replace(/[^0-9]/g, \"\")\n    if(tw > ww){setTabletSize(false)}\n    window.addEventListener('resize', resizeHandler)\n  \n    return () => {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, []);\n  \n  return (\n    <BrowserRouter>\n      <Suspense fallback={(<div>Loading...</div>)}>\n        <NavBar />\n        <Wrapper winSize={isTabletMode} >\n          <Switch>\n            <Route exact path=\"/\" component={Auth(Home, null)} />\n            <Route exact path=\"/gallery\" component={Auth(Gallery, null)} />\n            <Route exact path=\"/health\" component={Auth(Health, null)} />\n            <Route exact path=\"/goods\" component={Auth(Goods, null)} />\n            <Route exact path=\"/together\" component={Auth(Together, null)} />\n            <Route exact path=\"/board\" component={Auth(Board, null)} />\n            <Route exact path=\"/signin\" component={Auth(LoginPage, false)} />\n            <Route exact path=\"/signup\" component={Auth(RegisterPage, false)} />\n          </Switch>\n        </Wrapper>\n      </Suspense>\n      <ReactQueryDevtools initialIsOpen={true} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/youyeonchang/Desktop/portfolio/petti/client/src/atoms.ts",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/utils/Size.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/LoginPage/LoginPage.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/NavBar/NavBar.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Board/Board.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/RegisterPage/RegisterPage.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Goods/Goods.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Gallery/Gallery.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Health/Health.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/Home.tsx",["129","130","131"],[],"import React from 'react';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { getMovies, IGetMoviesResult } from '../../../api';\nimport { makeImagePath } from '../../../util';\nimport HomeRecentGallery from './HomeRecentGallery';\nimport HomePopularGallery from './HomePopularGallery';\nimport HomeRecommendGallery from './HomeRecommendGallery';\nimport { withRouter } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n    width: 100%;\n`\n\nconst Loader = styled.div`\n    height: 20vh;\n    display: flex;\n    justify-content: center;\n`\n\nconst Banner = styled.div<{bgPhoto:string}>`\n    height: 100vh;\n    display: flex;\n    background-image: url( ${(props) => props.bgPhoto} );\n    background-size: cover;\n`\n\nconst MiddleLine = styled.div`\n    width: 100%;\n    background-color: #ccc;\n    padding-top: .1rem;\n    box-sizing: border-box;\n    border-top: 4rem solid ${props => props.theme.light.darker};\n    /* border-bottom: 2.4rem solid ${props => props.theme.light.darker}; */\n`\n\nfunction Home() {\n    const { data, isLoading } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies)//나중에 node생성시에 확인하고 바꿔 줘야함\n  return (\n      <Wrapper>{isLoading ? \n        (<Loader>Loading...</Loader>) : \n        <>\n            {/* <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>Banner</Banner> */}\n            <HomeRecentGallery />\n            <MiddleLine />\n            <HomePopularGallery />\n            <MiddleLine />\n            <HomeRecommendGallery />\n            <MiddleLine />\n            <>\n                해야 할 일, 굿즈추가\n                board 추가\n            </>\n        </>\n        }</Wrapper>\n  );\n}\n\nexport default withRouter(Home);\n","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Together/Together.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/api.ts",[],[],["132","133"],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/HomePopularGallery.tsx",["134"],[],"import { AnimatePresence } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { getMovies, IGetMoviesResult } from '../../../api';\nimport { makeImagePath } from '../../../util';\nimport { FaChevronCircleLeft, FaChevronCircleRight } from 'react-icons/fa'\nimport { Slider, SliderTitle, SliderArrowBox, SliderRow, SliderBox, sliderOffset, sliderVariants, SliderDesc, SliderHeading, SliderUser, SliderUserImg, SliderUserName, SliderThumb } from './HomeCommon'\n\nfunction HomePopularGallery() {\n    const { data, isLoading } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies)//나중에 node생성시에 확인하고 바꿔 줘야함\n    const [recentIndex, setRecentIndex] = useState(0);\n    const [sliderDirection, setSliderDirection] = useState(false);\n    const [leaving, setLeaving] = useState(false);\n    const increaseRecent = () => {\n        if(data){\n            if(leaving) return;\n            toggleLeaving();\n            setSliderDirection(false);\n            const maxDataIndex = Math.ceil(data.results.length / sliderOffset) -1\n            setRecentIndex((prev) => ( prev===maxDataIndex? 0 : prev+1));\n        }\n    }\n    const decreaseRecent = () => {\n        if(data){\n            if(leaving) return;\n            toggleLeaving();\n            setSliderDirection(true);\n            const maxDataIndex = Math.ceil(data.results.length / sliderOffset) -1\n            setRecentIndex((prev) => ( prev===0 ? maxDataIndex : prev -1));\n        }\n    }\n    const toggleLeaving =() => setLeaving((prev) => !prev);\n  return (\n    <Slider>\n        <SliderHeading>Popular Gallery</SliderHeading>\n        <SliderArrowBox>\n            <FaChevronCircleLeft onClick={decreaseRecent} /><FaChevronCircleRight onClick={increaseRecent} />\n        </SliderArrowBox>\n        <AnimatePresence \n            initial={false} \n            custom={sliderDirection}\n            onExitComplete={toggleLeaving}\n            >\n            <SliderRow \n                custom={sliderDirection}\n                variants={sliderVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={recentIndex}\n            >\n                {data?.results.slice(sliderOffset * recentIndex, sliderOffset * recentIndex + sliderOffset).map((movie) => (\n                    <SliderBox>\n                        <SliderThumb key={movie.id} bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}>\n                        </SliderThumb>\n                        <SliderDesc>\n                            <SliderTitle>{movie.overview}</SliderTitle>\n                            <SliderUser>\n                                <SliderUserImg bgPhoto={makeImagePath(movie.poster_path, \"w500\")}></SliderUserImg>\n                                <SliderUserName>\n                                    {movie.title}\n                                </SliderUserName>\n                            </SliderUser>\n                        </SliderDesc>\n                    </SliderBox>\n                ))}\n            </SliderRow>\n        </AnimatePresence>\n    </Slider>\n  );\n}\n\nexport default HomePopularGallery;\n","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/HomeRecentGallery.tsx",["135"],[],"import { AnimatePresence } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { getMovies, IGetMoviesResult } from '../../../api';\nimport { makeImagePath } from '../../../util';\nimport { FaChevronCircleLeft, FaChevronCircleRight } from 'react-icons/fa'\nimport { Slider, SliderTitle, SliderArrowBox, SliderRow, SliderBox, sliderOffset, sliderVariants, SliderDesc, SliderHeading, SliderUser, SliderUserImg, SliderUserName, SliderThumb } from './HomeCommon'\n\nfunction HomeRecentGallery() {\n    const { data, isLoading } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies)//나중에 node생성시에 확인하고 바꿔 줘야함\n    const [recentIndex, setRecentIndex] = useState(0);\n    const [sliderDirection, setSliderDirection] = useState(false);\n    const [leaving, setLeaving] = useState(false);\n    const increaseRecent = () => {\n        if(data){\n            if(leaving) return;\n            toggleLeaving();\n            setSliderDirection(false);\n            const maxDataIndex = Math.ceil(data.results.length / sliderOffset) -1\n            setRecentIndex((prev) => ( prev===maxDataIndex? 0 : prev+1));\n        }\n    }\n    const decreaseRecent = () => {\n        if(data){\n            if(leaving) return;\n            toggleLeaving();\n            setSliderDirection(true);\n            const maxDataIndex = Math.ceil(data.results.length / sliderOffset) -1\n            setRecentIndex((prev) => ( prev===0 ? maxDataIndex : prev -1));\n        }\n    }\n    const toggleLeaving =() => setLeaving((prev) => !prev);\n  return (\n    <Slider>\n        <SliderHeading>Recent Gallery</SliderHeading>\n        <SliderArrowBox>\n            <FaChevronCircleLeft onClick={decreaseRecent} /><FaChevronCircleRight onClick={increaseRecent} />\n        </SliderArrowBox>\n        <AnimatePresence \n            initial={false} \n            custom={sliderDirection}\n            onExitComplete={toggleLeaving}\n            >\n            <SliderRow \n                custom={sliderDirection}\n                variants={sliderVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={recentIndex}\n            >\n                {data?.results.slice(sliderOffset * recentIndex, sliderOffset * recentIndex + sliderOffset).map((movie) => (\n                    <SliderBox>\n                        <SliderThumb key={movie.id} bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}>\n                        </SliderThumb>\n                        <SliderDesc>\n                            <SliderTitle>{movie.overview}</SliderTitle>\n                            <SliderUser>\n                                <SliderUserImg bgPhoto={makeImagePath(movie.poster_path, \"w92\")}></SliderUserImg>\n                                <SliderUserName>\n                                    {movie.title}\n                                </SliderUserName>\n                            </SliderUser>\n                        </SliderDesc>\n                    </SliderBox>\n                ))}\n            </SliderRow>\n        </AnimatePresence>\n    </Slider>\n  );\n}\n\nexport default HomeRecentGallery;\n","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/HomeRecommendGallery.tsx",["136"],[],"import { AnimatePresence } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { getMovies, IGetMoviesResult } from '../../../api';\nimport { makeImagePath } from '../../../util';\nimport { FaChevronCircleLeft, FaChevronCircleRight } from 'react-icons/fa'\nimport { Slider, SliderTitle, SliderArrowBox, SliderRow, SliderBox, sliderOffset, sliderVariants, SliderDesc, SliderHeading, SliderUser, SliderUserImg, SliderUserName, SliderThumb } from './HomeCommon'\n\nfunction HomeRecommendGallery() {\n    const { data, isLoading } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies)//나중에 node생성시에 확인하고 바꿔 줘야함\n    const [recentIndex, setRecentIndex] = useState(0);\n    const [sliderDirection, setSliderDirection] = useState(false);\n    const [leaving, setLeaving] = useState(false);\n    const increaseRecent = () => {\n        if(data){\n            if(leaving) return;\n            toggleLeaving();\n            setSliderDirection(false);\n            const maxDataIndex = Math.ceil(data.results.length / sliderOffset) -1\n            setRecentIndex((prev) => ( prev===maxDataIndex? 0 : prev+1));\n        }\n    }\n    const decreaseRecent = () => {\n        if(data){\n            if(leaving) return;\n            toggleLeaving();\n            setSliderDirection(true);\n            const maxDataIndex = Math.ceil(data.results.length / sliderOffset) -1\n            setRecentIndex((prev) => ( prev===0 ? maxDataIndex : prev -1));\n        }\n    }\n    const toggleLeaving =() => setLeaving((prev) => !prev);\n  return (\n    <Slider>\n        <SliderHeading>Recommend Gallery</SliderHeading>\n        <SliderArrowBox>\n            <FaChevronCircleLeft onClick={decreaseRecent} /><FaChevronCircleRight onClick={increaseRecent} />\n        </SliderArrowBox>\n        <AnimatePresence \n            initial={false} \n            custom={sliderDirection}\n            onExitComplete={toggleLeaving}\n            >\n            <SliderRow \n                custom={sliderDirection}\n                variants={sliderVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={recentIndex}\n            >\n                {data?.results.slice(sliderOffset * recentIndex, sliderOffset * recentIndex + sliderOffset).map((movie) => (\n                    <SliderBox>\n                        <SliderThumb key={movie.id} bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}>\n                        </SliderThumb>\n                        <SliderDesc>\n                            <SliderTitle>{movie.overview}</SliderTitle>\n                            <SliderUser>\n                                <SliderUserImg bgPhoto={makeImagePath(movie.poster_path, \"w500\")}></SliderUserImg>\n                                <SliderUserName>\n                                    {movie.title}\n                                </SliderUserName>\n                            </SliderUser>\n                        </SliderDesc>\n                    </SliderBox>\n                ))}\n            </SliderRow>\n        </AnimatePresence>\n    </Slider>\n  );\n}\n\nexport default HomeRecommendGallery;\n","/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/NavBar/RightSide/RightSide.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/NavBar/LeftSide/LeftSide.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/util.ts",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/Components/views/Home/HomeCommon.tsx",[],[],"/Users/youyeonchang/Desktop/portfolio/petti/client/src/hoc/auth.js",["137"],[],"import React, { useEffect } from 'react'\nimport { useMutation } from 'react-query'\nimport { actAuth } from '../api'\n\n \n\nexport default function Auth(SpecificComponent, option, adminRoute = null) {\n\n    function AuthenticationCheck(props) {\n        const authMutation = useMutation( () => actAuth())\n\n        useEffect(() => {\n            authMutation.mutateAsync()\n                .then(response => {\n                    console.log(response)\n                    console.log(response.data.isAuth)\n                    if(!response.data.isAuth){//not login\n                        if(option){//Only logged in users can access\n                            props.history.push('/')\n                        }\n                    } else {//login\n                        if(adminRoute && !response.data.isAdmin) {\n                            props.history.push('/')\n                        }else{\n                            if(option === false){\n                                props.history.push('/')\n                            }\n                        }\n                    }\n                })\n        }, [])\n        \n        return (\n            <SpecificComponent />\n        )\n    }\n    return AuthenticationCheck\n}",["138","139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":45,"column":6,"nodeType":"146","endLine":45,"endColumn":8,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":23},{"ruleId":"148","severity":1,"message":"152","line":21,"column":7,"nodeType":"150","messageId":"151","endLine":21,"endColumn":13},{"ruleId":"148","severity":1,"message":"153","line":38,"column":13,"nodeType":"150","messageId":"151","endLine":38,"endColumn":17},{"ruleId":"140","replacedBy":"154"},{"ruleId":"142","replacedBy":"155"},{"ruleId":"148","severity":1,"message":"156","line":10,"column":19,"nodeType":"150","messageId":"151","endLine":10,"endColumn":28},{"ruleId":"148","severity":1,"message":"156","line":10,"column":19,"nodeType":"150","messageId":"151","endLine":10,"endColumn":28},{"ruleId":"148","severity":1,"message":"156","line":10,"column":19,"nodeType":"150","messageId":"151","endLine":10,"endColumn":28},{"ruleId":"144","severity":1,"message":"157","line":31,"column":12,"nodeType":"146","endLine":31,"endColumn":14,"suggestions":"158"},{"ruleId":"140","replacedBy":"154"},{"ruleId":"142","replacedBy":"155"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'resizeHandler' and 'setTabletSize'. Either include them or remove the dependency array.","ArrayExpression",["161"],"@typescript-eslint/no-unused-vars","'makeImagePath' is defined but never used.","Identifier","unusedVar","'Banner' is assigned a value but never used.","'data' is assigned a value but never used.",["159"],["160"],"'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authMutation' and 'props.history'. Either include them or remove the dependency array.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [resizeHandler, setTabletSize]",{"range":"167","text":"168"},"Update the dependencies array to be: [authMutation, props.history]",{"range":"169","text":"170"},[1738,1740],"[resizeHandler, setTabletSize]",[1102,1104],"[authMutation, props.history]"]