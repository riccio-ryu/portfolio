{"ast":null,"code":"var _jsxFileName = \"/Users/youyeonchang/Desktop/portfolio/petti/src/Components/views/Home/HomeRecommendGallery.tsx\",\n    _s = $RefreshSig$();\n\nimport { AnimatePresence } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { getMovies } from '../../../api';\nimport { makeImagePath } from '../../../util';\nimport { FaChevronCircleLeft, FaChevronCircleRight } from 'react-icons/fa';\nimport { Slider, SliderTitle, SliderArrowBox, SliderRow, SliderBox, sliderOffset, sliderVariants, SliderDesc, SliderHeading, SliderUser, SliderUserImg, SliderUserName, SliderThumb } from './HomeCommon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomeRecommendGallery() {\n  _s();\n\n  const {\n    data,\n    isLoading\n  } = useQuery([\"movies\", \"nowPlaying\"], getMovies); //나중에 node생성시에 확인하고 바꿔 줘야함\n\n  const [recentIndex, setRecentIndex] = useState(0);\n  const [sliderDirection, setSliderDirection] = useState(false);\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseRecent = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      setSliderDirection(false);\n      const maxDataIndex = Math.ceil(data.results.length / sliderOffset) - 1;\n      setRecentIndex(prev => prev === maxDataIndex ? 0 : prev + 1);\n    }\n  };\n\n  const decreaseRecent = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      setSliderDirection(true);\n      const maxDataIndex = Math.ceil(data.results.length / sliderOffset) - 1;\n      setRecentIndex(prev => prev === 0 ? maxDataIndex : prev - 1);\n    }\n  };\n\n  const toggleLeaving = () => setLeaving(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    children: [/*#__PURE__*/_jsxDEV(SliderHeading, {\n      children: \"Recommend Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SliderArrowBox, {\n      children: [/*#__PURE__*/_jsxDEV(FaChevronCircleLeft, {\n        onClick: decreaseRecent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FaChevronCircleRight, {\n        onClick: increaseRecent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      initial: false,\n      custom: sliderDirection,\n      onExitComplete: toggleLeaving,\n      children: /*#__PURE__*/_jsxDEV(SliderRow, {\n        custom: sliderDirection,\n        variants: sliderVariants,\n        initial: \"hidden\",\n        animate: \"visible\",\n        exit: \"exit\",\n        transition: {\n          type: \"tween\",\n          duration: 1\n        },\n        children: data === null || data === void 0 ? void 0 : data.results.slice(sliderOffset * recentIndex, sliderOffset * recentIndex + sliderOffset).map(movie => /*#__PURE__*/_jsxDEV(SliderBox, {\n          children: [/*#__PURE__*/_jsxDEV(SliderThumb, {\n            bgPhoto: makeImagePath(movie.backdrop_path, \"w500\")\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SliderDesc, {\n            children: [/*#__PURE__*/_jsxDEV(SliderTitle, {\n              children: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SliderUser, {\n              children: [/*#__PURE__*/_jsxDEV(SliderUserImg, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SliderUserName, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this))\n      }, recentIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeRecommendGallery, \"Vy/kx/0I2klToI+Q65ZT07zaZ+E=\", false, function () {\n  return [useQuery];\n});\n\n_c = HomeRecommendGallery;\nexport default HomeRecommendGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeRecommendGallery\");","map":{"version":3,"sources":["/Users/youyeonchang/Desktop/portfolio/petti/src/Components/views/Home/HomeRecommendGallery.tsx"],"names":["AnimatePresence","React","useState","useQuery","getMovies","makeImagePath","FaChevronCircleLeft","FaChevronCircleRight","Slider","SliderTitle","SliderArrowBox","SliderRow","SliderBox","sliderOffset","sliderVariants","SliderDesc","SliderHeading","SliderUser","SliderUserImg","SliderUserName","SliderThumb","HomeRecommendGallery","data","isLoading","recentIndex","setRecentIndex","sliderDirection","setSliderDirection","leaving","setLeaving","increaseRecent","toggleLeaving","maxDataIndex","Math","ceil","results","length","prev","decreaseRecent","type","duration","slice","map","movie","backdrop_path","id"],"mappings":"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","sourcesContent":["import { AnimatePresence } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { getMovies, IGetMoviesResult } from '../../../api';\nimport { makeImagePath } from '../../../util';\nimport { FaChevronCircleLeft, FaChevronCircleRight } from 'react-icons/fa'\nimport { Slider, SliderTitle, SliderArrowBox, SliderRow, SliderBox, sliderOffset, sliderVariants, SliderDesc, SliderHeading, SliderUser, SliderUserImg, SliderUserName, SliderThumb } from './HomeCommon'\n\nfunction HomeRecommendGallery() {\n    const { data, isLoading } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies)//나중에 node생성시에 확인하고 바꿔 줘야함\n    const [recentIndex, setRecentIndex] = useState(0);\n    const [sliderDirection, setSliderDirection] = useState(false);\n    const [leaving, setLeaving] = useState(false);\n    const increaseRecent = () => {\n        if(data){\n            if(leaving) return;\n            toggleLeaving();\n            setSliderDirection(false);\n            const maxDataIndex = Math.ceil(data.results.length / sliderOffset) -1\n            setRecentIndex((prev) => ( prev===maxDataIndex? 0 : prev+1));\n        }\n    }\n    const decreaseRecent = () => {\n        if(data){\n            if(leaving) return;\n            toggleLeaving();\n            setSliderDirection(true);\n            const maxDataIndex = Math.ceil(data.results.length / sliderOffset) -1\n            setRecentIndex((prev) => ( prev===0 ? maxDataIndex : prev -1));\n        }\n    }\n    const toggleLeaving =() => setLeaving((prev) => !prev);\n  return (\n    <Slider>\n        <SliderHeading>Recommend Gallery</SliderHeading>\n        <SliderArrowBox>\n            <FaChevronCircleLeft onClick={decreaseRecent} /><FaChevronCircleRight onClick={increaseRecent} />\n        </SliderArrowBox>\n        <AnimatePresence \n            initial={false} \n            custom={sliderDirection}\n            onExitComplete={toggleLeaving}\n            >\n            <SliderRow \n                custom={sliderDirection}\n                variants={sliderVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={recentIndex}\n            >\n                {data?.results.slice(sliderOffset * recentIndex, sliderOffset * recentIndex + sliderOffset).map((movie) => (\n                    <SliderBox>\n                        <SliderThumb key={movie.id} bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}>\n                        </SliderThumb>\n                        <SliderDesc>\n                            <SliderTitle>title</SliderTitle>\n                            <SliderUser>\n                                <SliderUserImg />\n                                <SliderUserName>\n                                    Name\n                                </SliderUserName>\n                            </SliderUser>\n                        </SliderDesc>\n                    </SliderBox>\n                ))}\n            </SliderRow>\n        </AnimatePresence>\n    </Slider>\n  );\n}\n\nexport default HomeRecommendGallery;\n"]},"metadata":{},"sourceType":"module"}