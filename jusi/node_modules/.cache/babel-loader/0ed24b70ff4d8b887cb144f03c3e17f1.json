{"ast":null,"code":"var _jsxFileName = \"/Users/youyeonchang/Desktop/portfolio/jusi/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport { fetchStockHistory } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    stockId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"history\", stockId], () => fetchStockHistory(stockId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : // <ApexChart\n    // type=\"line\"\n    // series={[\n    //     {\n    //     name: \"Price\",\n    //     data: data?.map((price) => price.close),\n    //     },\n    // ]}\n    // options={{\n    //     theme: {\n    //     mode: \"dark\",\n    //     },\n    //     chart: {\n    //     height: 300,\n    //     width: 500,\n    //     toolbar: {\n    //         show: false,\n    //     },\n    //     background: \"transparent\",\n    //     },\n    //     grid: { show: false },\n    //     stroke: {\n    //     curve: \"smooth\",\n    //     width: 4,\n    //     },\n    //     yaxis: {\n    //     show: false,\n    //     },\n    //     xaxis: {\n    //     axisBorder: { show: false },\n    //     axisTicks: { show: false },\n    //     labels: { show: false },\n    //     },\n    // }}\n    // />\n    console.log(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/youyeonchang/Desktop/portfolio/jusi/src/routes/Chart.tsx"],"names":["React","useQuery","fetchStockHistory","Chart","stockId","isLoading","data","console","log"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;;;AAgBA,SAASC,KAAT,OAAoC;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAChC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBL,QAAQ,CAAc,CAAC,SAAD,EAAYG,OAAZ,CAAd,EAAoC,MAAKF,iBAAiB,CAACE,OAAD,CAA1D,CAApC;AACA,sBACI;AAAA,cACKC,SAAS,GACN,kBADM,GAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAvCR;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH;;GA/CQH,K;UACuBF,Q;;;KADvBE,K;AAiDT,eAAeA,KAAf","sourcesContent":["import ApexChart from 'react-apexcharts'\nimport React from 'react'\nimport { useQuery } from \"react-query\"\nimport { fetchStockHistory } from '../api'\n\ninterface IHistorical {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n  }\ninterface IChart {\n    stockId: string;\n}\n\nfunction Chart({ stockId }: IChart) {\n    const { isLoading, data } = useQuery<IHistorical>([\"history\", stockId], ()=> fetchStockHistory(stockId))\n    return (\n        <div>\n            {isLoading ? (\n                \"Loading chart...\"\n            ) : (\n                // <ApexChart\n                // type=\"line\"\n                // series={[\n                //     {\n                //     name: \"Price\",\n                //     data: data?.map((price) => price.close),\n                //     },\n                // ]}\n                // options={{\n                //     theme: {\n                //     mode: \"dark\",\n                //     },\n                //     chart: {\n                //     height: 300,\n                //     width: 500,\n                //     toolbar: {\n                //         show: false,\n                //     },\n                //     background: \"transparent\",\n                //     },\n                //     grid: { show: false },\n                //     stroke: {\n                //     curve: \"smooth\",\n                //     width: 4,\n                //     },\n                //     yaxis: {\n                //     show: false,\n                //     },\n                //     xaxis: {\n                //     axisBorder: { show: false },\n                //     axisTicks: { show: false },\n                //     labels: { show: false },\n                //     },\n                // }}\n                // />\n                console.log(data)\n                \n            )}\n        </div>\n    )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}