{"ast":null,"code":"var _jsxFileName = \"/Users/youyeonchang/Desktop/portfolio/jusi/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport ApexCharts from 'react-apexcharts';\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport { fetchStockHistory } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    stockId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"history\", stockId], () => fetchStockHistory(stockId));\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexCharts, {\n      type: \"line\",\n      series: [{\n        name: \"Price\",\n        data: data === null || data === void 0 ? void 0 : data.map(price => price.clpr) //data: [1, 3, 5, 7]\n\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/youyeonchang/Desktop/portfolio/jusi/src/routes/Chart.tsx"],"names":["ApexCharts","React","useQuery","fetchStockHistory","Chart","stockId","isLoading","data","console","log","name","map","price","clpr","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;;;AAuBA,SAASC,KAAT,OAAoC;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAChC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBL,QAAQ,CAAc,CAAC,SAAD,EAAYG,OAAZ,CAAd,EAAoC,MAAKF,iBAAiB,CAACE,OAAD,CAA1D,CAApC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,sBACI;AAAA,cACKD,SAAS,GACN,kBADM,gBAGN,QAAC,UAAD;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,MAAM,EAAE,CACJ;AACAI,QAAAA,IAAI,EAAE,OADN;AAEAH,QAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAACC,IAA3B,CAFN,CAGA;;AAHA,OADI,CAFR;AASA,MAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE;AACPC,UAAAA,IAAI,EAAE;AADC,SADF;AAILC,QAAAA,KAAK,EAAE;AACPC,UAAAA,MAAM,EAAE,GADD;AAEPC,UAAAA,KAAK,EAAE,GAFA;AAGPC,UAAAA,OAAO,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WAHF;AAMPC,UAAAA,UAAU,EAAE;AANL,SAJF;AAYLC,QAAAA,IAAI,EAAE;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAZD;AAaLG,QAAAA,MAAM,EAAE;AACRC,UAAAA,KAAK,EAAE,QADC;AAERN,UAAAA,KAAK,EAAE;AAFC,SAbH;AAiBLO,QAAAA,KAAK,EAAE;AACPL,UAAAA,IAAI,EAAE;AADC,SAjBF;AAoBLM,QAAAA,KAAK,EAAE;AACPC,UAAAA,UAAU,EAAE;AAAEP,YAAAA,IAAI,EAAE;AAAR,WADL;AAEPQ,UAAAA,SAAS,EAAE;AAAER,YAAAA,IAAI,EAAE;AAAR,WAFJ;AAGPS,UAAAA,MAAM,EAAE;AAAET,YAAAA,IAAI,EAAE;AAAR;AAHD;AApBF;AATT;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH;;GAhDQhB,K;UACuBF,Q;;;KADvBE,K;AAkDT,eAAeA,KAAf","sourcesContent":["import ApexCharts from 'react-apexcharts'\nimport React from 'react'\nimport { useQuery } from \"react-query\"\nimport { fetchStockHistory } from '../api'\n\ninterface IHistorical {\n    tbasDt: string;\n    srtnCd: string;\n    isinCd: string;\n    itmsNm: string;\n    mrktCtg: string;\n    clpr: string;\n    vs: string;\n    fltRt: string;\n    mkp: string;\n    hipr: string;\n    lopr: string;\n    trqu: string;\n    trPrc: string;\n    lstgStCnt: string;\n    mrktTotAmt: string;\n  }\ninterface IChart {\n    stockId: string;\n}\n\nfunction Chart({ stockId }: IChart) {\n    const { isLoading, data } = useQuery<IHistorical>([\"history\", stockId], ()=> fetchStockHistory(stockId))\n    console.log(data);\n    \n    return (\n        <div>\n            {isLoading ? (\n                \"Loading chart...\"\n            ) : (\n                <ApexCharts\n                type=\"line\"\n                series={[\n                    {\n                    name: \"Price\",\n                    data: data?.map((price) => price.clpr),\n                    //data: [1, 3, 5, 7]\n                    },\n                ]}\n                options={{\n                    theme: {\n                    mode: \"dark\",\n                    },\n                    chart: {\n                    height: 300,\n                    width: 500,\n                    toolbar: {\n                        show: false,\n                    },\n                    background: \"transparent\",\n                    },\n                    grid: { show: false },\n                    stroke: {\n                    curve: \"smooth\",\n                    width: 4,\n                    },\n                    yaxis: {\n                    show: false,\n                    },\n                    xaxis: {\n                    axisBorder: { show: false },\n                    axisTicks: { show: false },\n                    labels: { show: false },\n                    },\n                }}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}